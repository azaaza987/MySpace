<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">

    <!-- JNDIæ–¹å¼?é…?ç½®æ•°æ?®æº? -->
    <!-- 
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
         <property name="jndiName" value="${jndiName}"></property> 
    </bean> 
    -->

    <!-- é…?ç½®æ•°æ?®æº? -->
    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	   <property name="driverClass" value="${driverClassName}"/>
		<property name="user" value="${jdbc_username}"/>  
       <!-- ç”¨æˆ·å¯†ç ?-->  
       <property name="password" value="${jdbc_password}"/>  
       <property name="jdbcUrl" value="${jdbc_url}"/>
	   
	    <!--è¿žæŽ¥æ± ä¸­ä¿?ç•™çš„æœ€å°?è¿žæŽ¥æ•°ã€‚-->            
	    <property name="minPoolSize" value="3" />        
	    <!--è¿žæŽ¥æ± ä¸­ä¿?ç•™çš„æœ€å¤§è¿žæŽ¥æ•°ã€‚Default: 15 -->         
	    <property name="maxPoolSize" value="15" />        
	    <!--æœ€å¤§ç©ºé—²æ—¶é—´,1800ç§’å†…æœªä½¿ç”¨åˆ™è¿žæŽ¥è¢«ä¸¢å¼ƒã€‚è‹¥ä¸º0åˆ™æ°¸ä¸?ä¸¢å¼ƒã€‚Default: 0 -->               
	    <property name="maxIdleTime" value="1800" />        
	    <!--å½“è¿žæŽ¥æ± ä¸­çš„è¿žæŽ¥è€—å°½çš„æ—¶å€™c3p0ä¸€æ¬¡å?Œæ—¶èŽ·å?–çš„è¿žæŽ¥æ•°ã€‚Default: 3 -->               
	    <property name="acquireIncrement" value="3" />        
	    <property name="maxStatements" value="100" />         
	    <property name="initialPoolSize" value="3" />          
	    <!--æ¯?60ç§’æ£€æŸ¥æ‰€æœ‰è¿žæŽ¥æ± ä¸­çš„ç©ºé—²è¿žæŽ¥ã€‚Default: 0 -->       
	    <property name="idleConnectionTestPeriod" value="60" />          
	    <!--å®šä¹‰åœ¨ä»Žæ•°æ?®åº“èŽ·å?–æ–°è¿žæŽ¥å¤±è´¥å?Žé‡?å¤?å°?è¯•çš„æ¬¡æ•°ã€‚Default: 30 -->       
	    <!-- <property name="acquireRetryAttempts" value="30" />  -->  
	    <property name="acquireRetryAttempts" value="30" />       
	    <property name="breakAfterAcquireFailure" value="true" />             
	    <property name="testConnectionOnCheckout" value="false" />
	</bean>
    <!-- é…?ç½®hibernate sessionå·¥åŽ‚ -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!-- webé¡¹ç›®å?¯åŠ¨æ—¶æ˜¯å?¦æ›´æ–°è¡¨ç»“æž„ -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!-- ç³»ç»Ÿä½¿ç”¨çš„æ•°æ?®åº“æ–¹è¨€ï¼Œä¹Ÿå°±æ˜¯ä½¿ç”¨çš„æ•°æ?®åº“ç±»åž‹ -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!-- æ˜¯å?¦æ‰“å?°Hibernateç”Ÿæˆ?çš„SQLåˆ°æŽ§åˆ¶å?° -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!-- æ˜¯å?¦æ ¼å¼?åŒ–æ‰“å?°å‡ºæ?¥çš„SQL -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
            </props>
        </property>

        <!-- è‡ªåŠ¨æ‰«æ??æ³¨è§£æ–¹å¼?é…?ç½®çš„hibernateç±»æ–‡ä»¶ -->
        <!-- <property name="packagesToScan">
            <list>
                <value>com.helen.sso.model</value>
            </list>
        </property> -->

        <!-- è‡ªåŠ¨æ‰«æ??hbmæ–¹å¼?é…?ç½®çš„hibernateæ–‡ä»¶å’Œ.hbmæ–‡ä»¶ -->
        
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:hbm/</value>
            </list>
        </property>
        
    </bean>

    <!-- é…?ç½®äº‹åŠ¡ç®¡ç?†å™¨ -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- æ³¨è§£æ–¹å¼?é…?ç½®äº‹ç‰© -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- æ‹¦æˆªå™¨æ–¹å¼?é…?ç½®äº‹ç‰© -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            ä»¥å¦‚ä¸‹å…³é”®å­—å¼€å¤´çš„æ–¹æ³•ä½¿ç”¨äº‹ç‰©
            <tx:method name="add*" />
            <tx:method name="save*" />
            <tx:method name="update*" />
            <tx:method name="modify*" />
            <tx:method name="edit*" />
            <tx:method name="delete*" />
            <tx:method name="remove*" />
            <tx:method name="repair" />
            <tx:method name="deleteAndRepair" />
            ä»¥å¦‚ä¸‹å…³é”®å­—å¼€å¤´çš„æ–¹æ³•ä¸?ä½¿ç”¨äº‹ç‰©
            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="load*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="datagrid*" propagation="SUPPORTS" />
            å…¶ä»–æ–¹æ³•ä¸?ä½¿ç”¨äº‹ç‰©
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice> -->
    <!-- åˆ‡é?¢ï¼Œå°†äº‹ç‰©ç”¨åœ¨å“ªäº›å¯¹è±¡ä¸Š -->
    <!-- <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.aig.postsale.service..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config> -->
    
</beans>